package chapter11.object;

class Student {
	int studentId;
	String studentName;
	public Student(int studentId, String studentName) {
		super();
		this.studentId = studentId;
		this.studentName = studentName;
	}
	@Override
	public String toString() {
		return studentId + ", " + studentName;
	}
	
//	@Override
//	public int hashCode() {
//		return Objects.hash(studentId, studentName);
//	}
	
	@Override
	public boolean equals(Object obj) {
		if(obj instanceof Student) {
			Student std = (Student) obj;
			if(studentId == std.studentId)
				return true;
			else
				return false;
		}
		return false;
	}
	
	@Override
	public int hashCode() {
		return studentId;
	}
	
	
}

// st1, st2 객체와 st3 객체가 동일한 데이터를 가지고 있으면, 동일한 객체 비교가 되도록 equals(), hashCode() 메서드를 재정의해야 한다.
public class EqualTest {
	public static void main(String[] args) {
		Student st1 = new Student(100, "손흥민");
		Student st2 = st1; // 힙 영역의 주소대입
		Student st3 = new Student(100, "손흥민");
		
		// 동일한 주소의 두 인스턴스 비교
		if(st1 == st2) {
			System.out.println("st1과 st3 주소가 같습니다.");
		}else {
			System.out.println("st1과 st3 주소가 같지 않습니다.");
		}
	}
}
